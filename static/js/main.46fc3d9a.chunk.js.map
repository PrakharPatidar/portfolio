{"version":3,"sources":["components/header.js","components/home.js","components/about.js","components/work.js","components/contact.js","components/blogs.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["header","className","to","exact","activeClassName","Component","home","about","work","contact","class","MailOutlined","target","href","LinkedinFilled","TwitterCircleFilled","WhatsAppOutlined","blogs","footer","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kTAkBeA,G,6KAZP,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAASC,GAAG,aAAaD,UAAU,cAAcE,OAAK,EAACC,gBAAgB,eAAvE,QACA,kBAAC,IAAD,CAASF,GAAG,mBAAmBD,UAAU,cAAcG,gBAAgB,eAAvE,SACA,kBAAC,IAAD,CAASF,GAAG,kBAAkBD,UAAU,cAAcG,gBAAgB,eAAtE,QACA,kBAAC,IAAD,CAASF,GAAG,qBAAqBD,UAAU,cAAcG,gBAAgB,eAAzE,WACA,kBAAC,IAAD,CAASF,GAAG,mBAAmBD,UAAU,cAAcG,gBAAgB,eAAvE,c,GARKC,cCQNC,E,uKARP,OACI,uD,GAHOD,aCUJE,E,uKARP,OACI,0D,GAHQF,aCULG,E,uKARP,OACI,oD,GAHOH,a,gCCqCJI,E,uKAlCP,OACI,yBAAKR,UAAU,qBACX,wBAAIS,MAAM,cACN,wBAAIA,MAAM,6CACN,kBAACC,EAAA,EAAD,MACA,8BACI,uBAAGD,MAAM,kBAAkBE,OAAO,YAAYC,KAAK,iDAAnD,UAGR,wBAAIH,MAAM,6CACN,kBAACI,EAAA,EAAD,MACA,8BACI,uBAAGJ,MAAM,kBAAkBE,OAAO,YAAYC,KAAK,iDAAnD,cAGR,wBAAIH,MAAM,6CACN,kBAACK,EAAA,EAAD,MACA,8BACI,uBAAGL,MAAM,kBAAkBE,OAAO,YAAYC,KAAK,mCAAnD,aAGR,wBAAIH,MAAM,6CACN,kBAACM,EAAA,EAAD,MACA,8BACI,uBAAGN,MAAM,kBAAkBE,OAAO,YAAYC,KAAK,6BAAnD,oB,GA1BNR,aCSPY,E,uKARP,OACI,2D,GAHQZ,aCULa,E,uKARP,OACI,oD,GAHSb,a,MC0CNc,MA5Bf,WACE,OACE,yBAAKlB,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACiB,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOjB,OAAK,EAACiB,KAAK,oBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOjB,OAAK,EAACiB,KAAK,mBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOjB,OAAK,EAACiB,KAAK,sBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOjB,OAAK,EAACiB,KAAK,oBAChB,kBAAC,EAAD,QAGJ,kBAAC,EAAD,SC1BYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.46fc3d9a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, } from \"react-router-dom\";\nimport '../css/header.css';\n\nclass header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <NavLink to='/portfolio' className='each-header' exact activeClassName='active-link' >Home</NavLink>\n                <NavLink to='/portfolio/about' className='each-header' activeClassName='active-link'>About</NavLink>\n                <NavLink to='/portfolio/work' className='each-header' activeClassName='active-link'>Work</NavLink>\n                <NavLink to='/portfolio/contact' className='each-header' activeClassName='active-link'>Contact</NavLink>\n                <NavLink to='/portfolio/blogs' className='each-header' activeClassName='active-link'>Blogs</NavLink>\n            </div>\n        )\n    }\n}\n\nexport default header\n","import React, { Component } from 'react'\n\nclass home extends Component {\n    render() {\n        return (\n            <div>\n                This is home page.\n            </div>\n        )\n    }\n}\n\nexport default home\n","import React, { Component } from 'react'\n\nclass about extends Component {\n    render() {\n        return (\n            <div>\n                This is all about me!\n            </div>\n        )\n    }\n}\n\nexport default about\n","import React, { Component } from 'react'\n\nclass work extends Component {\n    render() {\n        return (\n            <div>\n                This is my work\n            </div>\n        )\n    }\n}\n\nexport default work\n","import React, { Component } from 'react'\nimport { LinkedinFilled, MailOutlined, TwitterCircleFilled, WhatsAppOutlined } from '@ant-design/icons';\n\nclass contact extends Component {\n    render() {\n        return (\n            <div className='contact-container'>\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item d-flex align-items-center\">\n                        <MailOutlined />\n                        <span>\n                            <a class=\"nav-link active\" target='_location' href='https://www.linkedin.com/in/prakharpatidar987'>Mail</a>\n                        </span>\n                    </li>\n                    <li class=\"list-group-item d-flex align-items-center\">\n                        <LinkedinFilled />\n                        <span>\n                            <a class=\"nav-link active\" target='_location' href='https://www.linkedin.com/in/prakharpatidar987'>LinkedIn</a>\n                        </span>\n                    </li>\n                    <li class=\"list-group-item d-flex align-items-center\">\n                        <TwitterCircleFilled />\n                        <span>\n                            <a class=\"nav-link active\" target='_location' href='https://twitter.com/prakhar_987'>Twitter</a>\n                        </span>\n                    </li>\n                    <li class=\"list-group-item d-flex align-items-center\">\n                        <WhatsAppOutlined />\n                        <span>\n                            <a class=\"nav-link active\" target='_location' href='https://web.whatsapp.com/'>Whatsapp</a>\n                        </span>\n                    </li>\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nexport default contact","import React, { Component } from 'react'\n\nclass blogs extends Component {\n    render() {\n        return (\n            <div>\n                My blogs. Coming soon!\n            </div>\n        )\n    }\n}\n\nexport default blogs\n","import React, { Component } from 'react'\n\nclass footer extends Component {\n    render() {\n        return (\n            <div>\n                Copyright @2020\n            </div>\n        )\n    }\n}\n\nexport default footer\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Header from './components/header';\nimport Home from './components/home';\nimport About from './components/about';\nimport Work from './components/work';\nimport Contact from './components/contact';\nimport Blogs from './components/blogs';\nimport Footer from './components/footer';\nimport './css/common.css';\n\nfunction App() {\n  return (\n    <div className='main-container'>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/portfolio'>\n            <Home />\n          </Route>\n          <Route exact path='/portfolio/about'>\n            <About />\n          </Route>\n          <Route exact path='/portfolio/work'>\n            <Work />\n          </Route>\n          <Route exact path='/portfolio/contact'>\n            <Contact />\n          </Route>\n          <Route exact path='/portfolio/blogs'>\n            <Blogs />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}